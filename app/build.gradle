apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.example.android.hrs.blueprints.jumpmeasurementapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled false
            useProguard true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    // ffmpegのため
    //エラーメッセージの通り入れていく
    packagingOptions {
        //pickFirst 'lib/armeabi-v7a/libswscale.so'
        //pickFirst 'lib/arm64-v8a/your_name.so'
        pickFirst 'lib/x86/libswscale.so'
        //pickFirst 'lib/x86_64/your_name.so'
        pickFirst 'lib/armeabi-v7a/libavcodec.so'
        pickFirst 'lib/armeabi-v7a/libswscale.so'
        pickFirst 'lib/arm64-v8a/libavutil.so'
        pickFirst 'lib/x86/libavcodec.so'
        pickFirst 'lib/x86_64/libavutil.so'
        pickFirst 'lib/arm64-v8a/libffmpeg_mediametadataretriever_jni.so'
        pickFirst 'lib/x86/libffmpeg_mediametadataretriever_jni.so'
        pickFirst 'lib/x86_64/libavcodec.so'
        pickFirst 'lib/x86_64/libswscale.so'
        pickFirst 'lib/x86_64/libavformat.so'
        pickFirst 'lib/arm64-v8a/libswscale.so'
        pickFirst 'lib/arm64-v8a/libavcodec.so'
        pickFirst 'lib/armeabi-v7a/libffmpeg_mediametadataretriever_jni.so'
        pickFirst 'lib/x86_64/libffmpeg_mediametadataretriever_jni.so'
        pickFirst 'lib/armeabi-v7a/libavutil.so'
        pickFirst 'lib/x86/libavutil.so'
        pickFirst 'lib/arm64-v8a/libavformat.so'
        pickFirst 'lib/x86/libavformat.so'
        pickFirst 'lib/armeabi-v7a/libavformat.so'

    }

}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // App dependencies
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"

    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation project(path: ':Opencv')
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    // 他のdesign support libsも使いたいので以下を追加
    implementation 'com.android.support:design:28.0.0'
//    implementation project(path: ':opencv')
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker:$dexMaker"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:$dexMaker"

    // Android Testing Support Library - Instrumented testing
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"


    //https://github.com/wseemann/FFmpegMediaMetadataRetriever
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-core:1.0.15'
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native:1.0.15'

    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-core:1.0.15'
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native-armeabi-v7a:1.0.15'
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native-x86:1.0.15'
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native-x86_64:1.0.15'
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native-arm64-v8a:1.0.15'

    // リサイクルjビューのサポートライブラリ
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    // カードビュー
    implementation "androidx.cardview:cardview:1.0.0"
    compile 'com.isseiaoki:simplecropview:1.0.10'

//    // ToDo  バターナイフ関連
//    compile 'com.jakewharton:butterknife:8.4.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
//    implementation 'com.android.support:support-annotations:28.0.0'
    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files

    // Image Loading
    implementation 'com.github.bumptech.glide:glide:4.10.0'
//    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    // View
    implementation 'com.makeramen:roundedimageview:2.3.0'



}
